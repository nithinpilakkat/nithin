
/**********************************************************************************/
/*                                                                                */
/*                                                                               */
/*  DATE                   :May 20, 2014,TIME->09:51:02                                    */
/*  Project name        :SmartNav                                                  */
/*  FileName              :i2c.h*/
/*  CPU GROUP       :27                                                        */
/*  Designer Engg     : Nithin.P               
/*                                                                                */
/*  This file is generated by Renesas Project Generator (Ver.4.18).      		  */
/*                                     											  */
/**********************************************************************************/

#ifndef  __i2c_h_

#define __i2c_h_


#define ACK		0
#define NOACK	1

#define WRITE_MODE	0
#define READ_MODE	1



#define wait_i2c     200
#define bit_delay    1000

typedef unsigned char uchar;


typedef struct __RTC{
	uchar SEC;
	uchar MIN;
	uchar HOUR;
	uchar DAYS;
	uchar WEEKDAYS;
	uchar MONTH;
	uchar YEAR;
}_RTC;



extern uchar RTCBuff[8];
extern _RTC * PtrPCF8563;

void _WaitTime0us(void);
void _WaitTime1us(void);
void _WaitTime2us(void);

#define _Wait_tHIGH		_WaitTime1us()	// Clock pulse width high 
#define _Wait_tLOW		_WaitTime2us()	// Clock pulse width low 
#define _Wait_tHD_STA	_WaitTime1us()	// Start hold time 
#define _Wait_tSU_STA	_WaitTime1us()	// Start setup time 
#define _Wait_tHD_DAT	_WaitTime0us()	// Data in hold time 
#define _Wait_tSU_DAT	_WaitTime1us()	// Data in setup time 
#define _Wait_tAA		_WaitTime1us()	// Access time 
#define _Wait_tSU_STO	_WaitTime1us()	// Stop setup time 
#define _Wait_tBUF		_WaitTime2us()	// Bus free time for next mode 







typedef struct 
{
	unsigned char iic_DeviceAddress;
	unsigned char iic_MemoryAddress;
	unsigned char *iic_Data;
	unsigned char iic_NumberOfByte;
}IicPack;







void initIicBus(void);
unsigned char IicBusRead(IicPack *);
unsigned char IicBusWrite(IicPack *);
void StartCondition(void);
void StopCondition(void);
unsigned char ByteWrite(unsigned char);
void ByteRead(unsigned char *, unsigned char);
uchar decToBcd(uchar val);
uchar bcdToDec(uchar val);
void sendtoRTC(uchar SEC, 
			   uchar MIN,
			   uchar HOUR,
			   uchar DAYS,
			   uchar WEEKDAYS,
			   uchar MONTH,
			   uchar YEAR) ;
uchar* Read_RTC();
void Write_RTC();

#endif