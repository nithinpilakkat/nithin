/**********************************************************************************/
/*                                                                                */
/*                                                                               */
/*  DATE                   :May 08, 2014,TIME->12:03:54                                    */
/*  Project name        :SmartNav                                                  */
/*  FileName              :Sim900.h*/
/*  CPU GROUP       :27                                                        */
/*  Designer Engg     : Nithin.P               
/*                                                                                */
/*  This file is generated by Renesas Project Generator (Ver.4.18).      		  */
/*                                     											  */
/**********************************************************************************/

#ifndef  __Sim900_h_

#define  __Sim900_h_


/********************************************************************************************/
/*  DATE			:May 09, 2014,TIME->14:48:32             */
/*  FileName		:Sim900.h 			*/
/*  Designer Engg	:Nithin.P                          	                */
/* Just for information i am using the Assigning the pin*/
/*                                                                                         */
/*                                                                                         */
/******************************************************************************************/

#define PowerKey    PKEY

#define GsmRx_Pin   Rx_Gsm 
#define GsmTx_Pin	Tx_Gsm
#define Ring_Pin    Ring  

#define ON   1
#define Off  0 

#define GsmRXBufferSize 255
#define GsmTxBuffSize 512
#define TCP_DELAY_Interval  100        //1000  * 100 mSec

typedef const unsigned char romchar;


extern romchar AT[];
extern romchar ATE0[] ;   
extern romchar CREG[] ;
extern romchar CENG[] ; 
extern romchar CSQ[] ;
extern romchar CGCLASS[];
extern romchar CGDCONT[];//\"airtelgprs.com\"\r\n"};  
 
extern romchar CGATT[];   
extern romchar CGATT0[]; 

extern romchar CIICR[];//\"airtelgprs.com\",\"\",\"\"\r\n"  
extern romchar CIFSR[];

extern romchar CIPCSGP[];//\"airtelgprs.com\"\r\n"};   
extern romchar CSTT[];//\"airtelgprs.com\"\r\n"}; 

extern romchar CIPSTART[];//\"64.27.25.155\",\"10020\"\r\n"};

extern romchar CIPSHUT [];
extern romchar CIPCLOSE [] ;

extern romchar CLPORT [];//\"0001\"\r\n"};

extern romchar CIPSEND[] ;
extern romchar CMGS[];

extern romchar EOD[] ;
extern romchar CIPSTATUS [] ;




#define DebugOn

#ifndef DebugOn
	#define DegugOff
#endif



typedef unsigned char uchar;




enum Gsm_Event{
	EvtInit,
	EvtGsmRing,
	EvtGsmMsg,

	//***CSQ*********//
	T_CsqReceived,

	//********CSQ********/
	

MsgOk,
MsgError,
NORMAL_PDOWN,
IP_INITIAL,
IP_START,
IP_CONFIG,
IP_GPRSACT,
IP_STATUS,
TCP_CONNECTING,
CONNECTING,
DATA_RECEIVED,
SERVER_LISTENING,
CONNECT_OK,
TCP_CLOSING,
UDP_CLOSING,
TCP_CLOSED,
UDP_CLOSED,
ALREADY_CONNECTED,
PDP_DEACT,
Tcp_Error,
Tcp_Default,
Tcp_CREG_oK,
TCP_MSG,
TCP_SHUT_OK,
TCP_SEND_OK,
};

enum TimeEvent{
TimerOver,
TimerRunning,
TimerStart,
TimerStop,
TimerInit,
};


/***Super state****/
enum GsmCon_Status{
InitGsm,
GsmConnected,
GsmDisconnected,
Gsm_CSQ_Low,
};

enum GsmCon_state{
	CheckCSQ,
	CsqHigh,
	CsqLow,
	CsqNoSignal,
Con_InitState,
Con_ATE0,
Con_CMGD,
Con_CNMI,
Con_CIPSHUT,
Con_CMGF,
Con_CSMP,
Con_Exit,

Con_Running,

	/*****con************/
	Con_Received,
	Con_SENDOK,
	TcpConnected,
	T_CATE0,
	T_CCREG,
	T_CCGDCONT,
	T_CCGATT,
	T_CCIPSTATUS,
	T_CCIPSTART,
	T_CCIPCSGP,
	T_CCSTT,
	T_CCIICR,
	T_CCIFSR,
	T_CCIPSHUT,
	T_CLPORT,
	T_CIPCLOSE,
	/*****con************/	

};

enum GsmMsgEvt{
	MsgInit,
	MsgRead,
	MsgSend,
	MsgReceived,
	MsgStarted,
};

enum GsmDisplayMsg{
	Done,
	Update,
};

enum GprsMsgType{
ButtonEvt,
RegularUpdate,

};


enum _Tcp_State{
	TCP_STATE_INIT,
	TCP_STATE_CONNECTING,
	TCP_STATE_CONNECTED,
	
};



 struct GsmEvent{
 enum  GsmCon_Status  	ConnectionStatus;	//Main state
 enum  _Tcp_State		Tcp_State;	
 
 enum GsmCon_state 		State;
 enum GsmCon_state 		NextState;      
 enum GsmCon_state 		OldState; 
 enum Gsm_Event			Event;
 enum Gsm_Event			EvtExpected;
 uchar Retry;

 unsigned long			L_Tick;
 unsigned int 			Delay; 			      //delay for function to complete 		
 unsigned int 			TickCnt;
 unsigned int 			MaxDelay;
 enum TimeEvent 		TimeStatus;     //Status Event like runnung or completed
 
 char 			MobNo[15];
 char 			D_Id[7];
 char			Ip_ADD[17];
 char 			PortNo[7];
 char 			_Csq[4];
 unsigned int 	Rssi;

 
 /**********Uart***********/
 char  				RxTemp;
 char  				Rxbuff[GsmRXBufferSize];
 char 				TxBuff[GsmTxBuffSize];
 unsigned int 		BuffCnt;
 unsigned int 		MsgLenght;
 enum GsmMsgEvt 	MsgStatus;    	 //uart buffer Status value 
 /********************/
 
 /******Diplay*************/
 char Gsm_Status[15];
 char Gsm_Sms[15];
 char Tick[15];
 enum GsmDisplayMsg Display;
 

 /*************************/
};





/*
typedef struct _TcpConnection{

	unsigned int MinDelay;
	unsigned int MaxDelay;

};
*/
typedef volatile struct  GsmEvent * GsmEventPointer;



extern volatile GsmEventPointer GsmPtr;


void GsmConfig( enum GsmCon_state _State,
				    enum GsmCon_state _NextState,
 					enum GsmCon_state _OldState,
					enum GsmMsgEvt 	  _MsgStatus,
					enum Gsm_Event	  _EvtExpected,
				 	unsigned int _TMin,
				 	unsigned int _TMax,
				 	enum TimeEvent _TEvt);

void Tcp(void);
void Tcp_Init(void);

void GsmDisplayUpdate(char * msg,char loc);
void Gsm_Callabort(void);
void GsmRing(void);
void Gsm_State(void);
void ReStart(void);
void GsmInit(void);
void Init_Sim900(void)   ;
void GsmRun(void)        ;
void SmsProcess(void)    ;
void OnModemReceive(void);
void OnGsmError(void)    ;
void GsmDisableComm(void);
void GsmEnableComm(void) ;
void GsmStartReceive(void);



void ToSend(enum GprsMsgType MsgType);
void GsmStayConnected(void);
unsigned char GsmCheckMsg(void);
void CheckCsq(void);
void GsmClearBufffer(void);
void drv_sim900_sendframe(uchar * buf,unsigned int len) ;
void drv_sim900_send_cmd(int size, unsigned char const * str);
#endif